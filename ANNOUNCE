The Wine development release 5.6 is now available.

What's new in this release (see below for details):
  - Still more Media Foundation work.
  - Improvements to Active Directory LDAP support.
  - A few more modules converted to PE.
  - Improvements to gdb proxy mode.
  - Various bug fixes.

The source is available from the following locations:

  https://dl.winehq.org/wine/source/5.x/wine-5.6.tar.xz
  http://mirrors.ibiblio.org/wine/source/5.x/wine-5.6.tar.xz

Binary packages for various distributions will be available from:

  https://www.winehq.org/download

You will find documentation on https://www.winehq.org/documentation

You can also get the current source directly from the git
repository. Check https://www.winehq.org/git for details.

Wine is available thanks to the work of many people. See the file
AUTHORS in the distribution for the complete list.

----------------------------------------------------------------

Bugs fixed in 5.6 (total 38):

  19420  Passmark 7.0 2d benchmark tests fails without native gdiplus
  21466  Multiple applications need NtQueryVolumeInformationFile 'FileFsVolumeInformation' class support (AVG Free 8.x/9.x Antivirus Edition, MSYS2)
  24784  Explorer++ displays disabled toolbar icons incorrectly
  27324  Cossacks II (DotEmu version) refuses to start from its install directory (path too long?)
  30810  Keygener Assistant 2.x: main window has incorrect size and contents are all black
  31207  Monogram GraphStudio v0.3.x crashes when using Graph->Insert Filter
  33290  Fullscreen games cause panning configurations to be generated on some NVidia proprietary drivers
  34014  Star Wars KOTOR II: The Sith Lords: Movies/cutscenes do not play with opengl on
  37029  Evernote 5.5.x - unable to capture webcam note
  37043  Keyboard input broken in Roblox Player
  37051  Roblox Studio embedded webpage does not load consistently or properly using built-in winhttp
  38856  LEGO Lord of the Rings crashes randomly
  41610  ChurchBoard: Trying to create a window(about 3 minutes). And the error takes off.
  41740  Diablo 3's mouse sprite stops moving, but the mouse is still working.
  42072  Dead Space (Steam) crashes on save with "divide by zero" error
  42479  MYOB Accounting v18.5.x crashes on startup
  43704  Contacam crashes
  47083  MySQL 8.0.x community installer (.NET 4.5.x app) fails to configure mysql, needs support for WS_AF_INET6 in 'iphlpapi.GetExtendedTcpTable'
  47109  WineVulkan ICD isn't registered in wineprefixes
  47362  Media Feature Pack for W10N requires rtworkq.dll
  47794  Rockstar Games Launcher installer button images do not display
  47825  Webex Meetings crashes
  48611  Cairo Shell v0.3.x (.NET 4.7 app) crashes due to missing 'HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WinLogon\\Shell' registry sub-key
  48623  Error authenticating to LDAP controller
  48729  Binary Domain has misplaced text in configuration tool with builtin d3dx9_43
  48766  Late Shift doesn't work properly
  48778  Star Wars: The Old Republic crashes shortly after intro screen
  48788  null pointer in wined3d_palette_set_entries with Diablo GOG
  48798  RegCloseKey: Uninitialized read from get_language_sort
  48806  Panzer Corps 2 needs msvcp140.dll.?_XLgamma@std@@YANN@Z
  48816  The explorer doesn't support '/cd' option
  48832  Magic The Gathering Online: client does not start due to long file names since 2020-03-25 update
  48838  Wine fails to build wldap32 if LDAP is not installed
  48844  Magical Scramble Demo 1.20P shows white boxes instead of pictures.
  48846  msvcr90/tests/msvcr90.c: error: variadic functions must use the base AAPCS variant
  48888  error: redefinition of typedef ‘_onexit_t’ [/dlls/d3dcompiler_33]
  48897  Building fails with '/usr/bin/ld: cannot find -ldl'
  48902  Warframe launcher fails to replace updated Launcher.exe the first time (works when Retry option pressed, as Launcher.exe deleted first time)

----------------------------------------------------------------

Changes since 5.5:

Akihiro Sagawa (2):
      ddraw/tests: Add more managed texture tests.
      ddraw: Allow to create managed textures with DDSCAPS_TEXTURE|DDSCAPS_3DDEVICE caps.

Alexandre Julliard (84):
      ntdll: Avoid using toupperW().
      ntdll: Avoid using tolowerW().
      ntdll: Avoid using memrchrW().
      ntdll: Avoid using memchrW().
      ntdll: Avoid using atoiW().
      ntdll: Avoid using sprintfW().
      ntdll: Use wcscpy() instead of strcpyW().
      ntdll: Use wcscat() instead of strcatW().
      ntdll: Use wcschr() instead of strchrW().
      ntdll: Use wcspbrk() instead of strpbrkW().
      ntdll: Use wcsrchr() instead of strrchrW().
      ntdll: Use wcstoul() instead of strtoulW().
      ntdll: Use wcslen() instead of strlenW().
      ntdll: Use wcscspn() instead of strcspnW().
      ntdll: Use wcsspn() instead of strspnW().
      ntdll: Use wcscmp() instead of strcmpW().
      ntdll: Use wcsncmp() instead of strncmpW().
      kernel32: Reimplement Get/WritePrivateProfileStructW functions using exported APIs.
      kernel32: Avoid using tolowerW/toupperW().
      kernel32: Avoid using memrchrW().
      kernel32: Avoid using memchrW().
      kernel32: Avoid using wctype functions.
      krnl386: Avoid using toupperW().
      ntdll: Move support for getting LDT entries to the platform-specific files.
      ntdll: Implement NtSetLdtEntries().
      ntdll: Reimplement LDT support for the TEB selector.
      ntdll: Avoid using the LDT definitions from libwine.
      krnl386: Reimplement LDT support using NtSetLdtEntries().
      krnl386: Avoid using the LDT definitions from libwine.
      ntdll: Export the LDT copy from ntdll instead of libwine.
      krnl386: Avoid using the selector functions from libwine.
      winebuild: Support building krnl386.exe in PE format.
      krnl386: Build with msvcrt.
      makefiles: Always build 16-bit modules with msvcrt.
      makefiles: Always explicitly specify the C runtime import.
      makefiles: Don't add default libs for msvcrt builds.
      wineandroid: Avoid using wine_get/set_fs().
      winex11: Avoid using wine_get/set_fs().
      libwine: Avoid using wine_get/set_fs().
      ntdll: Avoid using the selector functions from libwine.
      libwine: Make the LDT functions obsolete.
      configure: Add -ldl to default libs if necessary.
      bcrypt: Use standard dlopen() instead of the libwine wrappers.
      capi2032: Use standard dlopen() instead of the libwine wrappers.
      crypt32: Use standard dlopen() instead of the libwine wrappers.
      ctapi32: Use standard dlopen() instead of the libwine wrappers.
      dwrite: Use standard dlopen() instead of the libwine wrappers.
      dxgi: Use standard dlopen() instead of the libwine wrappers.
      gdi32: Use standard dlopen() instead of the libwine wrappers.
      glu32: Use standard dlopen() instead of the libwine wrappers.
      gphoto2.ds: Use standard dlopen() instead of the libwine wrappers.
      kerberos: Use standard dlopen() instead of the libwine wrappers.
      kernel32: Use standard dlopen() instead of the libwine wrappers.
      mountmgr.sys: Use standard dlopen() instead of the libwine wrappers.
      msgsm32.acm: Use standard dlopen() instead of the libwine wrappers.
      msxml3: Use standard dlopen() instead of the libwine wrappers.
      dbghelp: Make qsort callback explicitly cdecl.
      dbghelp: Use stricmp() instead of _strnicmp(..., -1).
      krnl386: Use stricmp() instead of _strnicmp(..., -1).
      netapi32: Use standard dlopen() instead of the libwine wrappers.
      ntdll: Use standard dlopen() instead of the libwine wrappers.
      odbc32: Use standard dlopen() instead of the libwine wrappers.
      qcap: Use standard dlopen() instead of the libwine wrappers.
      sane.ds: Use standard dlopen() instead of the libwine wrappers.
      secur32: Use standard dlopen() instead of the libwine wrappers.
      user32: Use standard dlopen() instead of the libwine wrappers.
      windowscodecs: Use standard dlopen() instead of the libwine wrappers.
      wineandroid: Use standard dlopen() instead of the libwine wrappers.
      winebus.sys: Use standard dlopen() instead of the libwine wrappers.
      winemac: Use standard dlopen() instead of the libwine wrappers.
      winex11: Use standard dlopen() instead of the libwine wrappers.
      winspool: Use standard dlopen() instead of the libwine wrappers.
      wineconsole: Use standard dlopen() instead of the libwine wrappers.
      libwine: Make the dlopen() wrapper functions obsolete.
      makefiles: Don't use standard libs for programs that specify -nodefaultlibs.
      winecrt0: Rebuild the argv array instead of getting it from libwine.
      msvcrt: Rebuild the argv array instead of getting it from libwine.
      winecfg: Avoid depending on the PACKAGE_* macros.
      winepath: Remove the --version option.
      winepath: Build with msvcrt.
      winver: Build with msvcrt.
      libwine: Remove some no longer needed helper functions.
      libwine: Remove __wine_main_arg* from the public header.
      winedump: Get rid of a useless destructor.

Alistair Leslie-Hughes (2):
      winmm: Use CreateFileA instead of OpenFile.
      secur32: Fix compile for older gnutls libraries.

Andrew Eikum (3):
      kernel32/tests: Actually run OpenFile tests.
      winmm/tests: Test mmioOpen with long file name.
      audioclient.idl: Correct IAudioClockAdjustment IID.

Andrew Guertin (1):
      d3d11: Stop warning about depth stencil view flags.

Aurimas Fišeras (1):
      po: Update Lithuanian translation.

Brendan Shanks (2):
      winevulkan: Create JSON manifest and registry entry used by official Vulkan loader.
      winevulkan: Enable VK_KHR_get_surface_capabilities2.

Charles Davis (46):
      ddraw/tests: Introduce compare_uint().
      d3d8/tests: Introduce compare_uint().
      d3d8/tests: Avoid abs() on unsigned values in compare_mode().
      ddraw: Introduce a helper to convert ddraw render states to wined3d states.
      ddraw: Introduce a helper to convert ddraw transform states to wined3d states.
      ddraw: Introduce a helper to convert ddraw primitive types to wined3d types.
      ddraw: Introduce a helper to convert ddraw stateblock types to wined3d types.
      d3d8: Introduce helpers to convert between d3d8 and wined3d multisample types.
      d3d8: Introduce a helper to convert d3d8 device types to wined3d types.
      d3d8: Introduce a helper to convert d3d8 transform states to wined3d states.
      d3d8: Introduce a helper to convert d3d8 render states to wined3d states.
      d3d8: Introduce a helper to convert d3d8 primitive types to wined3d types.
      d3d9: Introduce helpers to convert between d3d9 and wined3d multisample types.
      winegcc: Put quotes around arguments with spaces when printing them.
      dbghelp: Ignore N_INDR symbols.
      iphlpapi: Use res_getservers() if available to get the DNS server list.
      iphlpapi: Implement GetTcp6Table() for Mac OS and FreeBSD.
      iphlpapi: Implement GetUdp6Table() for Mac OS and FreeBSD.
      d3d9/tests: Use compare_uint() in a couple more places.
      d3d10core/tests: Use compare_uint() in a few more places.
      d3d11/tests: Use compare_uint() in a few more places.
      d3d11: Introduce a function to convert D3D10 map types to wined3d map flags.
      d3d11: Introduce a function to convert D3D10 DSV dimensions to D3D11.
      d3d11: Introduce a function to convert a wined3d feature level to a D3D feature level.
      d3d11: Introduce a function to convert a D3D11 input class to wined3d.
      d3d11: Introduce a function to convert D3D11 blend factors to wined3d.
      d3d11: Introduce a function to convert D3D11 blend ops to wined3d.
      d3d11: Introduce a function to convert D3D11 fill modes to wined3d.
      d3d11: Introduce a function to convert D3D11 cull modes to wined3d.
      d3d8: Explicitly cast FourCC formats in d3dformat_from_wined3dformat() and wined3dformat_from_d3dformat().
      d3d9: Explicitly cast FourCC formats in d3dformat_from_wined3dformat() and wined3dformat_from_d3dformat().
      opencl: Build with CL_SILENCE_DEPRECATION.
      winemac.drv: Build with GL_SILENCE_DEPRECATION.
      d3d11: Introduce a function to convert a D3D feature level to a D3D10.1 feature level.
      d2d1: Return enum constants directly in d2d_bitmap_brush_GetInterpolationMode() (Clang).
      d2d1: Introduce a function to convert D2D1.0 interpolation modes to D2D1.1.
      libwine: Add missing return (Clang).
      winemac.drv: Build with GL_SILENCE_DEPRECATION.
      d3d11: Introduce a function to convert D3D11 blend factors to D3D10.
      d3d11: Introduce a function to convert D3D11 blend ops to D3D10.
      wined3d: Introduce compare_uint().
      d3d9: Remove an unneeded conversion.
      configure: Make Clang fail optimization arguments it doesn't care about.
      widl: Cast server functions to void *.
      d3d10_1: Introduce a function to convert d3d10_1 feature levels to D3D_FEATURE_LEVEL.
      wined3d: Use GL_APPLE_flush_render and GL_APPLE_rgb_422 to detect Apple OpenGL.

Daniel Lehman (3):
      loader: Add Chatham Islands Standard Time Zone.
      loader: Add Bougainville Standard Time Zone.
      loader: Add Marquesas Standard Time Zone.

Derek Lesho (2):
      mfreadwrite: Fix flushing on MF_SOURCE_READER_ALL_STREAMS.
      include: Add codecapi.h.

Dmitry Timoshkov (50):
      wldap32: Fix compilation without LDAP installed.
      adsldp: Recognize and skip not supported schema tokens.
      adsldp: Require attribute definition to be properly terminated.
      adsldp: Add support for NAME token with multiple entries.
      adsldp: Map 1.3.6.1.4.1.1466.115.121.1.38 to ADSTYPE_CASE_IGNORE_STRING.
      adsldp: Map 1.3.6.1.4.1.1466.115.121.1.15 to ADSTYPE_CASE_IGNORE_STRING.
      adsldp: Map 1.3.6.1.4.1.1466.115.121.1.7 to ADSTYPE_BOOLEAN.
      adsldp: Implement IDirectorySearch::FreeColumn().
      adsldp: Fix IDirectorySearch::GetColumn() behaviour for not found case.
      adsldp/tests: Handle more cases of ERROR_DS_SERVER_DOWN.
      adsldp: Blacklist serverless and rootDSE connections in QueryInterface(&IID_IDirectorySearch).
      adsldp: Store original LDAP values pointer in hReserved.
      adsldp: Initialize also pADsValues->dwType field.
      adsldp: Ignore attribute definitions without NAME.
      adsldp: Sort the attribute types array.
      activeds: Add IADsPathname stubs.
      activeds: Make IADsPathname::Set() and IADsPathname::Retrieve() return success.
      adsldp: Add IDirectoryObject stubs.
      adsldp: Forward IDirectoryObject::QueryInterface() to parent.
      adsldp: Add support for IDirectorySearch::SetSearchPreference(ADS_SEARCHPREF_SECURITY_MASK).
      adsldp: Map 1.2.840.113556.1.4.907 to ADSTYPE_NT_SECURITY_DESCRIPTOR.
      wldap32/tests: Test setting a not supported server control.
      wldap32: Actually use private LDAP structure for internal storage.
      wldap32: Locally cache "supportedControl" rootDSE attribute, and check it in ldap_set_option(LDAP_OPT_SERVER_CONTROLS).
      adsldp: Fix a typo in IDirectorySearch::GetNextRow().
      wldap32: Fix server controls lookup logic.
      adsldp: Always fully initialize returned column values.
      adsldp: Recognize ADS_SEARCHPREF_PAGESIZE in IDirectorySearch::SetSearchPreference().
      adsldp: Recognize ADS_SEARCHPREF_CACHE_RESULTS in IDirectorySearch::SetSearchPreference().
      adsldp/tests: Remove no longer needed goto.
      include: Add dsclient.h.
      dsuiext: Add IDsDisplaySpecifier stubs.
      adsldp: Map "1.3.6.1.4.1.1466.115.121.1.24" to ADSTYPE_UTC_TIME.
      adsldp: Map "1.2.840.113556.1.4.906" to ADSTYPE_LARGE_INTEGER.
      adsldp: Map 1.2.840.113556.1.4.903 to ADSTYPE_DN_WITH_BINARY.
      adsldp: Add support for ADS_SEARCHPREF_ATTRIBTYPES_ONLY to IDirectorySearch::SetSearchPreference().
      adsldp: Recognize ADS_SEARCHPREF_TOMBSTONE in IDirectorySearch::SetSearchPreference().
      include/winnt.h: Update ACE types list.
      advapi32: Properly skip not supported parts of the object ACE.
      adsldp: Use correct format specifiers for SYSTEMTIME fields.
      adsldp: Fix typos in ADSTYPE_BOOLEAN handling.
      activeds/tests: Add some IADsPathname tests.
      activeds: Implement IADsPathname::Set(ADS_SETTYPE_FULL).
      activeds: Implement remaining cases for IADsPathname::Set().
      activeds: Implement IADsPathname::Retrieve(ADS_FORMAT_X500).
      activeds: Implement some simple cases for IADsPathname::Retrieve().
      activeds: Implement IADsPathname::Retrieve(ADS_FORMAT_LEAF).
      activeds: Implement IADsPathname::GetElement().
      activeds: Implement IADsPathname::GetNumElements().
      adsldp: Map 1.3.6.1.4.1.1466.115.121.1.26 to ADSTYPE_CASE_EXACT_STRING.

François Gouget (2):
      wpp: Standardize the error and warning messages.
      gameux/tests: Remove unneeded parentheses around a gamestatistics string.

Gabriel Ivăncescu (6):
      vbscript: Look for the identifier in the named item's disp only if it doesn't have the CODEONLY flag.
      vbscript/tests: Add more persistent named items tests.
      vbscript: Clear SCRIPTITEM_CODEONLY flag on script re-initialization.
      msscript.ocx: Fix the idl output parameters.
      quartz: Cache IMediaSeeking for filters.
      quartz/tests: Add tests for when IMediaSeeking on a filter is released by the filter graph.

Gerald Pfeifer (1):
      dbghelp: Define NT_GNU_BUILD_ID regardless of whether __ELF__ is defined.

Gijs Vermeulen (4):
      riched20: Turn FIXME into a TRACE for ITextRange::SetRange.
      iphlpapi: Silence unused function warning for sockaddr_in6_to_WS_storage.
      iphlpapi: Fix unused function warning for get_ipv6_addr_scope_table & find_ipv6_addr_scope.
      iphlpapi: Fix unused variable warning.

Hans Leidekker (4):
      secur32: Map GNUTLS_E_REHANDSHAKE to SEC_I_RENEGOTIATE.
      winhttp: Explicitly pass errors.
      winhttp: Handle renegotiate requests.
      secur32: Add TLS application protocol negotiation support.

Hans-Kristian Arntzen (1):
      dxgi: Implement dxgi_factory_CheckFeatureSupport().

Henri Verbeet (15):
      d3d9/tests: Introduce compare_uint().
      d3d10core/tests: Introduce compare_uint().
      d3d11/tests: Introduce compare_uint().
      d3d12/tests: Introduce compare_uint().
      d2d1/tests: Introduce compare_uint().
      d3drm/tests: Introduce compare_uint().
      d3dx9/tests: Introduce compare_uint().
      d3d9: Introduce helpers to convert between d3d9 and wined3d scanline ordering types.
      d3d9: Introduce a helper to convert d3d9 device types to wined3d types.
      d3d9: Introduce a helper to convert d3d9 texture filter types to wined3d types.
      d3d9: Introduce a helper to convert d3d9 transform states to wined3d states.
      d3d9: Introduce a helper to convert d3d9 render states to wined3d states.
      d3d9: Introduce a helper to convert d3d9 sampler states to wined3d states.
      d3d9: Introduce a helper to convert d3d9 primitive types to wined3d types.
      d3d9: Introduce helpers to convert between d3d9 and wined3d query types.

Jacek Caban (49):
      dbghelp: Pass module to map_dwarf_register.
      dbghelp: Use DWARF registry mapping quirk only for actual macho modules.
      dbghelp: Provide N_PEXT and N_SECT defines when not available.
      dbghelp: Clear N_PEXT flag of stab type in macho files.
      dbghelp: Use local stab_nlist declaration in macho_module.c.
      dbghelp: Use local declaration for 64-bit macho nlist.
      dbghelp: Pass stab size to stabs_parse.
      dbghelp: Fix misleading indentation warning.
      dbghelp: Use local NOTE_GNU_BUILD_ID declaration.
      dbghelp: Don't use *_NULL constants.
      dbghelp: Use local AT_SYSINFO_EHDR definition.
      dbghelp: Use local declarations of r_debug and link_map structs.
      dbghelp: Use local elf_header declaration.
      dbghelp: Use local elf_section_header declaration.
      dbghelp: Use local ELF program segment header declaration.
      dbghelp: Use local dynamic section entry declaration.
      dbghelp: Use local symbol table entry declaration.
      dbghelp: Inline ELF magic constants.
      dbghelp: Don't use ELF32_ST_BIND and ELF32_ST_TYPE macros.
      dbghelp: Use local ELF constants definitions.
      dbghelp: Don't use system headers for ELF declarations.
      dbghelp: Don't store entire mach header in image_file_map.
      dbghelp: Use local macho load command declaration.
      dbghelp: Use local macho section declaration.
      dbghelp: Use local fat header declaration.
      dbghelp: Use local symtab and segment commands declarations.
      dbghelp.c: Use local mach header declaration.
      dbghelp: Don't use stdint.h types.
      dbghelp: Use local constants definitions instead of mach-o/loader.h.
      dbghelp: Don't use _NSGetExecutablePath in macho_search_loader.
      dbghelp: Get rid of get_dyld_image_info_address.
      dbghelp: Don't bother trying to initialize loader backend if we can't get debug base address from PEB.
      mountmgr: Add mac-specific ioctl to lookup symbol files.
      dbghelp: Factor out query_dsym.
      dbghelp: Use mount manager to lookup dsym by uuid.
      dbghelp: Introduce read_process_memory helper.
      dbghelp: Fix GCC warnings in macho_module.c.
      dbghelp: Always build all loader backends.
      dbghelp: Import zlib inflate code.
      dbghelp: Remove unneeded includes.
      dbghelp: Don't use PATH to search for libraries.
      dbghelp: Build with ucrtbase.
      makefiles: Remove no longer needed explicit ucrtbase imports.
      include: Avoid _onexit_t redefinition.
      dbghelp: Get rid of no longer needed HAVE_ZLIB checks.
      dbghelp: Get rid of no longer needed #ifdefs.
      configure: Get rid of no longer needed zlib checks.
      dbghelp: Use debuggee environment variables in search_dll_path.
      api-ms-win-core-localization: Update spec files.

Jactry Zeng (4):
      qasf: Implement WM ASF reader stub.
      qasf: Implement IFileSourceFilter stub for WM ASF reader.
      qasf: Implement IFileSourceFilter_Load() for WM ASF reader.
      qasf: Implement IFileSourceFilter_GetCurFile() for WM ASF reader.

Jeff Smith (5):
      gdiplus/tests: Add widen-path test for UnitWorld zero-width line.
      gdiplus: Pass line-width parameter to widen-figure functions.
      gdiplus: Do not shrink UnitWorld lines below width 1.0.
      gdiplus: Widen-path for zero-width lines only emits anchors.
      gdiplus: Handle some degenerate cases with GdipCreatePath2.

Lauri Kenttä (1):
      po: Update Finnish translation.

Mathew Hodson (1):
      user32/tests: Don't report cursor handle since it always changes.

Matteo Bruni (6):
      d3dx9: Switch character count to unsigned int in the DrawText implementation.
      wined3d: Get rid of a WARN in wined3d_query_get_data().
      wined3d: Add a TRACE to wined3d_buffer_gl_download_ranges().
      wined3d: Add a TRACE to wined3d_buffer_gl_upload_ranges().
      wined3d: Add a TRACE to wined3d_buffer_copy().
      wined3d: Add a few traces to draw_primitive().

Myah Caron (1):
      ucrtbase: Export _o___stdio_common_v[fs]wprintf functions.

Nikolay Sivov (39):
      mfplat: Forward MFScheduleWorkItemEx() to rtworkq.dll.
      mfplat: Fix PRESENTATION_CURRENT_POSITION handling for system time source.
      mfplat/tests: Link to MFHeap* functions directly.
      mf: Set cancellation object directly (Coverity).
      mfplat: Add a warning for buffer method failure (Coverity).
      mfreadwrite: Do not call async reader callback if source failed to start up.
      mfreadwrite: Use single reader lock for all streams.
      mfreadwrite: Implement MF_SOURCE_READER_ANY_STREAM for async mode.
      mfreadwrite: Pack stream selection state as flags.
      rtworkq: Add RtwqJoinWorkQueue()/RtwqUnjoinWorkQueue() stubs.
      rtworkq: Add MMCSS-related stubs.
      comctl32/button: Use duplicated image for drawing.
      ntdll: Fix trace pointer returned from RtlGetUnloadEventTraceEx().
      mfreadwrite: Add stream index validation for Flush().
      mfreadwrite: Use default queue so submit flush commands.
      mfreadwrite: Handle async reads when flush is in progress.
      mfreadwrite: Move source shutdown mode to reader flags.
      mfreadwrite: Block recurring flush calls in async mode when flush is pending.
      mfreadwrite: Implement MF_SOURCE_READER_ANY_STREAM for synchronous case.
      mfreadwrite: Add support for seeking in Source Reader.
      mf: Add IMFMediaSink stub for SAR.
      mf: Implement dynamic stream management methods in SAR.
      mf: Add IMFMediaSinkPreroll stub for SAR.
      mf: Return sink flags for SAR.
      mf: Add event queue for SAR sink.
      include: Add ISpatialAudioClient definition.
      mf: Add support to get/set presentation clock for SAR.
      mfplat: Add SAR attribute traces.
      mf: Attempt to create mmdevapi device on SAR creation.
      mf: Add stream sink stub for SAR.
      mf: Add events support for SAR stream.
      mf: Add type handler stub for SAR stream.
      mfplat: Partially implement MFInitMediaTypeFromWaveFormatEx().
      mfplat: Initial support for WAVE_FORMAT_EXTENSIBLE in MFInitMediaTypeFromWaveFormatEx().
      mf: Add volume control stubs for SAR.
      mf: Add IMFAudioPolicy stub for SAR.
      mf/tests: Add some more tests for SAR current type.
      mf: Always queue set topologies.
      mf: Use original topology instance for both MESessionTopologySet and MESessionTopologyStatus.

Paul Gofman (1):
      ddraw: Reserve extra space for video memory surfaces in compatibility mode.

Piotr Caban (7):
      msvcr90/tests: Fix swscanf tests compilation on arm.
      server: Initialize current_time before it's used in init_registry.
      server: Use monotonic clock for relative timeouts.
      server: Use monotonic clock for SetTimer timeouts.
      server: Use monotonic clock in waitable timers.
      server: Use correct clock in select.
      kernel32/tests: Test timeout behaviour on system clock change.

Rémi Bernon (27):
      winedbg: Force read data to be NUL terminated.
      winedbg: Force packet data to be NUL terminated.
      winedbg: Cleanup extract_packets for faster acking.
      winedbg: Support QStartNoAckMode to reduce verbosity.
      winedbg: Explicitly handle MustReplyEmpty packet.
      winedbg: Cleanup return for kill and status packets.
      winedbg: Remove outdated commented code.
      winedbg: Simplify and fix register read/write handlers.
      winedbg: Simplify individual thread single_step control.
      winedbg: Use tid for other/exec thread operations.
      winedbg: Store the current debug event in gdbctx.
      winedbg: Rewrite and simplify step / continue handlers.
      winedbg: Remove uses of dbg_curr_thread from gdbproxy.
      winedbg: Support qXfer:libraries:read request.
      winedbg: Support qXfer:threads:read request.
      winedbg: Add gdb feature names to the register maps.
      winedbg: Add gdb register names to the register maps.
      winedbg: Add gdb register types to the register maps.
      winedbg: Support qXfer:features:read request.
      winedbg: Remove the use of gdb specific register length.
      winedbg: Use target pointer size in indirect string access.
      winedbg: Add support for hardware watchpoints.
      winedbg: Clean handle_exception return values.
      winedbg: Clean handle_debug_event return value.
      winedbg: Recompute signal from debug event as needed.
      winedbg: Don't wait or load the wine loader module.
      winedbg: Use debug event code in packet_reply_status.

Serge Gautherie (2):
      include: Remove remaining '&& !defined(CINTERFACE)' in guiddef.h.
      ntdll/tests: Fix 'path' copypastas.

Sven Baars (3):
      d3dx9: Add a helper for computing the bounding rectangle in ID3DXFont_DrawText.
      d3dx9: Handle vertical alignment in ID3DXFont_DrawText.
      d3dx9: Handle horizontal alignment in ID3DXFont_DrawText.

Zebediah Figura (70):
      server: Check whether the new file name is executable.
      quartz/avidec: Use the strmbase_passthrough object directly.
      quartz/acmwrapper: Use the strmbase_passthrough object directly.
      qasf/dmowrapper: Use the strmbase_passthrough object directly.
      qedit/samplegrabber: Use the strmbase_passthrough object directly.
      strmbase: Return void from strmbase_renderer_init().
      kernel32/tests: Add more tests for deleting and replacing open files.
      kernel32: Don't fail ReplaceFile() if unable to delete a generated backup.
      qedit/samplegrabber: Use calloc() in sample_grabber_create().
      qedit/samplegrabber: Get rid of the SG_Impl typedef.
      qedit/nullrenderer: Use calloc() in null_renderer_create().
      qedit/nullrenderer: Get rid of the NullRendererImpl typedef.
      evr: Use calloc() in evr_filter_create().
      evr: Get rid of the evr_filter typedef.
      quartz/acmwrapper: Get rid of the ACMWrapperImpl typedef.
      quartz/avidec: Get rid of the AVIDecImpl typedef.
      quartz/avidec: Fix some copy-paste errors.
      quartz/dsoundrender: Use calloc() in dsound_render_create().
      quartz/dsoundrender: Get rid of the DSoundRenderImpl typedef.
      d3dcompiler: Index instructions for liveness ranges.
      d3dcompiler: Compute liveness ranges for variables.
      d3dcompiler: Compute liveness ranges for anonymous nodes.
      quartz/filesource: Get rid of the AsyncReader typedef.
      quartz/videorenderer: Use calloc() in video_renderer_create().
      quartz/videorenderer: Get rid of the VideoRendererImpl typedef.
      quartz/vmr9: Use calloc().
      quartz/vmr9: Get rid of the VMR9DefaultAllocatorPresenterImpl typedef.
      ntdll: Synchronize ZwSetLdtEntries spec entry with NtSetLdtEntries.
      quartz: Return void from basic_video_init().
      quartz: Get rid of BaseControlVideo_Destroy().
      quartz: Get rid of the BaseControlWindow typedef.
      quartz: Get rid of the BaseWindowFuncTable typedef.
      quartz: Merge the BaseWindow structure into video_window.
      msvfw32: Fix a debug trace.
      kernel32: Create the backup in the same directory.
      rpcrt4: Handle FC_NON_ENCAPSULATED_UNION in calc_arg_size().
      rpcrt4: Implement NdrClientCall3().
      rpcrt4: Implement Ndr64AsyncClientCall().
      rpcrt4: Bump the maximum accepted NDR version.
      quartz: Return void from video_window_init().
      quartz: Get rid of the "width" and "height" fields of video_window.
      quartz/filesource: Remove unused callbacks.
      strmbase: Check the peer direction in source_Connect().
      winegstreamer: Check the format GUID, size, and pointer in amt_to_gst_caps().
      mountmgr: Determine and store the filesystem type, label, and serial.
      mountmgr: Return the filesystem type from IOCTL_MOUNTMGR_QUERY_UNIX_DRIVE.
      mountmgr: Allow querying a Unix device by device ID.
      ntdll: Implement NtQueryVolumeInformationFile(FileFsAttributeInformation).
      mountmgr: Return the serial and label from IOCTL_MOUNTMGR_QUERY_UNIX_DRIVE.
      ntdll: Implement NtQueryVolumeInformationFile(FileFsVolumeInformation).
      qcap/tests: Use explicit source and sink structures.
      qcap/tests: Add some basic tests for ICaptureGraphBuilder2::FindPin().
      qcap/tests: Add more tests for ICaptureGraphBuilder2::RenderStream().
      qcap: Use separate functions when searching from a pin and filter.
      qcap: Use pin_matches() directly in find_unconnected_source_from_pin().
      qcap: Iterate over all source pins in find_unconnected_source_from_filter().
      qcap: Search downstream pins regardless of whether the category and major type match.
      ntdll: Silence a warning for FileFsVolumeInformation.
      kernelbase: Return the volume serial number in GetFileInformationByHandle().
      ntdll: Fill the volume serial number in NtQueryInformationFile(FileIdInformation).
      mountmgr: Assign a unique nonzero serial to all volumes.
      kernel32: Reimplement is_same_file() using FileIdInformation.
      kernel32: Implement GetVolumeInformationByHandleW().
      user32: Rename the "hid_device" structure to "device".
      user32: Rename hid_devices_* variables to rawinput_devices_*.
      user32: Also scan for mouse devices in GetRawInputDeviceList().
      maintainers: Add Paul Gofman to the Staging branch section.
      maintainers: Add myself to some sections.
      maintainers: Take maintainership of DirectShow.
      maintainers: Take maintainership of the HTTP server libraries.

Zhipeng Zhao (1):
      explorer: Support '/cd,' command line option.

Zhiyi Zhang (15):
      winex11.drv: Get the minimum screen size from XRRGetScreenSizeRange().
      d3d8/tests: Fix possible test failures.
      d3d9/tests: Fix possible test failures.
      d3d8/tests: Add cursor size tests.
      d3d9/tests: Add cursor size tests.
      wined3d: Check cursor sizes are powers of two.
      wined3d: Move cursor size check against display mode out of wined3d_device_set_cursor_properties().
      dxgi/tests: Fix uninitialized variable warnings.
      d3d8/tests: Test cursor clipping.
      d3d9/tests: Test cursor clipping.
      dxgi/tests: Fix some test failures in test_find_closest_matching_mode().
      dxgi/tests: Test cursor clipping.
      ddraw/tests: Test cursor clipping.
      wined3d: Do not clip the cursor after changing display modes.
      dxgi/tests: Add a test for IDXGIFactory5 feature support queries.

Ziqing Hui (1):
      comctl32/toolbar: Correctly draw disabled button which contains 32 bpp bitmap with alpha channel.

--
Alexandre Julliard
julliard@winehq.org
